{"version":3,"sources":["actions/types.js","actions/logActions.js","components/layout/SearchBar.js","components/logs/LogItem.js","components/layout/Preloader.js","components/logs/Logs.js","components/layout/AddBtn.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["GET_LOGS","ADD_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","UPDATE_LOG","SET_LOADING","LOGS_ERROR","SEARCH_LOGS","GET_TECHS","ADD_TECH","DELETE_TECH","TECHS_ERROR","setLoading","type","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","response","statusText","useRef","style","marginBottom","className","id","placeholder","ref","onChange","e","current","value","htmlFor","deleteLog","method","setCurrent","log","href","attention","onClick","message","tech","format","date","M","toast","html","Preloader","state","getLogs","logs","loading","useEffect","length","map","AddBtn","getTechs","techs","t","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","target","disabled","checked","newLog","Date","updateLog","updLog","addTech","setFirstName","setLastName","deleteTech","initialState","error","combineReducers","action","filter","console","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb672c8f.chunk.js","sourcesContent":["export const GET_LOGS = 'GET_LOGS';\r\nexport const ADD_LOG = 'ADD_LOG';\r\nexport const DELETE_LOG = 'DELETE_LOG';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_LOG = 'UPDATE_LOG';\r\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const LOGS_ERROR = 'LOGS_ERROR';\r\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\r\nexport const GET_TECHS = 'GET_TECHS';\r\nexport const ADD_TECH = 'ADD_TECH';\r\nexport const DELETE_TECH = 'DELETE_TECH';\r\nexport const TECHS_ERROR = 'TECHS_ERROR';","import {\r\n    GET_LOGS,\r\n    SET_LOADING,\r\n    LOGS_ERROR,\r\n    ADD_LOG,\r\n    DELETE_LOG,\r\n    UPDATE_LOG,\r\n    SEARCH_LOGS,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT\r\n  } from './types';\r\n  \r\n  // Get logs from server\r\n  export const getLogs = () => async dispatch => {\r\n    try {\r\n      setLoading();\r\n  \r\n      const res = await fetch('/logs');\r\n      const data = await res.json();\r\n  \r\n      dispatch({\r\n        type: GET_LOGS,\r\n        payload: data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOGS_ERROR,\r\n        payload: err.response.statusText\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Add new log\r\n  export const addLog = log => async dispatch => {\r\n    try {\r\n      setLoading();\r\n  \r\n      const res = await fetch('/logs', {\r\n        method: 'POST',\r\n        body: JSON.stringify(log),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      const data = await res.json();\r\n  \r\n      dispatch({\r\n        type: ADD_LOG,\r\n        payload: data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOGS_ERROR,\r\n        payload: err.response.statusText\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Delete log from server\r\n  export const deleteLog = id => async dispatch => {\r\n    try {\r\n      setLoading();\r\n  \r\n      await fetch(`/logs/${id}`, {\r\n        method: 'DELETE'\r\n      });\r\n  \r\n      dispatch({\r\n        type: DELETE_LOG,\r\n        payload: id\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOGS_ERROR,\r\n        payload: err.response.statusText\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Update log on server\r\n  export const updateLog = log => async dispatch => {\r\n    try {\r\n      setLoading();\r\n  \r\n      const res = await fetch(`/logs/${log.id}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(log),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n  \r\n      const data = await res.json();\r\n  \r\n      dispatch({\r\n        type: UPDATE_LOG,\r\n        payload: data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOGS_ERROR,\r\n        payload: err.response.statusText\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Search server logs\r\n  export const searchLogs = text => async dispatch => {\r\n    try {\r\n      setLoading();\r\n  \r\n      const res = await fetch(`/logs?q=${text}`);\r\n      const data = await res.json();\r\n  \r\n      dispatch({\r\n        type: SEARCH_LOGS,\r\n        payload: data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOGS_ERROR,\r\n        payload: err.response.statusText\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Set current log\r\n  export const setCurrent = log => {\r\n    return {\r\n      type: SET_CURRENT,\r\n      payload: log\r\n    };\r\n  };\r\n  \r\n  // Clear current log\r\n  export const clearCurrent = () => {\r\n    return {\r\n      type: CLEAR_CURRENT\r\n    };\r\n  };\r\n  \r\n  // Set loading to true\r\n  export const setLoading = () => {\r\n    return {\r\n      type: SET_LOADING\r\n    };\r\n  };","import React, { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { searchLogs } from '../../actions/logActions';\r\n\r\nconst SearchBar = ({ searchLogs }) => {\r\n  const text = useRef('');\r\n\r\n  const onChange = e => {\r\n    searchLogs(text.current.value);\r\n  };\r\n\r\n  return (\r\n    <nav style={{ marginBottom: '30px' }} className='blue'>\r\n      <div className='nav-wrapper'>\r\n        <form>\r\n          <div className='input-field'>\r\n            <input\r\n              id='search'\r\n              type='search'\r\n              placeholder='Search Logs..'\r\n              ref={text}\r\n              onChange={onChange}\r\n            />\r\n            <label className='label-icon' htmlFor='search'>\r\n              <i className='material-icons'>search</i>\r\n            </label>\r\n            <i className='material-icons'>close</i>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  searchLogs: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { searchLogs }\r\n)(SearchBar);","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteLog, setCurrent } from '../../actions/logActions';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\r\n  const onDelete = () => {\r\n    deleteLog(log.id);\r\n    M.toast({ html: 'Log Deleted' });\r\n  };\r\n\r\n  return (\r\n    <li className='collection-item'>\r\n      <div>\r\n        <a\r\n          href='#edit-log-modal'\r\n          className={`modal-trigger ${\r\n            log.attention ? 'red-text' : 'blue-text'\r\n          }`}\r\n          onClick={() => setCurrent(log)}\r\n        >\r\n          {log.message}\r\n        </a>\r\n        <br />\r\n        <span className='grey-text'>\r\n          <span className='black-text'>ID #{log.id}</span> last updated by{' '}\r\n          <span className='black-text'>{log.tech}</span> on{' '}\r\n          <Moment format='MMMM Do YYYY, h:mm:ss a'>{log.date}</Moment>\r\n        </span>\r\n        <a href='#!' onClick={onDelete} className='secondary-content'>\r\n          <i className='material-icons grey-text'>delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nLogItem.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n  deleteLog: PropTypes.func.isRequired,\r\n  setCurrent: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteLog, setCurrent }\r\n)(LogItem);","import React from 'react'\r\n\r\n const Preloader = () => {\r\n    return (\r\n        <div className='progress blue lighten-4'>\r\n            <div className='indeterminate blue'></div>\r\n        </div>\r\n    )\r\n}\r\nexport default Preloader;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LogItem from './LogItem';\r\nimport Preloader from '../layout/Preloader';\r\nimport PropTypes from 'prop-types';\r\nimport { getLogs } from '../../actions/logActions';\r\n\r\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\r\n  useEffect(() => {\r\n    getLogs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (loading || logs === null) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <ul className='collection with-header'>\r\n      <li className='collection-header'>\r\n        <h4 className='center'>System Logs</h4>\r\n      </li>\r\n      {!loading && logs.length === 0 ? (\r\n        <p className='center'>No logs to show...</p>\r\n      ) : (\r\n        logs.map(log => <LogItem log={log} key={log.id} />)\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nLogs.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n  getLogs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  log: state.log\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getLogs }\r\n)(Logs);","import React from 'react';\r\n\r\nconst AddBtn = () => {\r\n  return (\r\n    <div className='fixed-action-btn'>\r\n      <a\r\n        href='#add-log-modal'\r\n        className='btn-floating btn-large blue darken-2 modal-trigger'\r\n      >\r\n        <i className='large material-icons'>add</i>\r\n      </a>\r\n      <ul>\r\n        <li>\r\n          <a\r\n            href='#tech-list-modal'\r\n            className='btn-floating green modal-trigger'\r\n          >\r\n            <i className='material-icons'>person</i>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href='#add-tech-modal' className='btn-floating yellow modal-trigger'>\r\n            <i className='material-icons'>person_add</i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBtn;","import {\r\n    GET_TECHS,\r\n    ADD_TECH,\r\n    DELETE_TECH,\r\n    SET_LOADING,\r\n    TECHS_ERROR\r\n  } from './types';\r\n  \r\n  // Get techs from server\r\n  export const getTechs = () => async dispatch => {\r\n    try {\r\n      setLoading();\r\n  \r\n      const res = await fetch('/techs');\r\n      const data = await res.json();\r\n  \r\n      dispatch({\r\n        type: GET_TECHS,\r\n        payload: data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: TECHS_ERROR,\r\n        payload: err.response.statusText\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Add technician to server\r\n  export const addTech = tech => async dispatch => {\r\n    try {\r\n      setLoading();\r\n  \r\n      const res = await fetch('/techs', {\r\n        method: 'POST',\r\n        body: JSON.stringify(tech),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      const data = await res.json();\r\n  \r\n      dispatch({\r\n        type: ADD_TECH,\r\n        payload: data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: TECHS_ERROR,\r\n        payload: err.response.statusText\r\n      });\r\n    }\r\n  };\r\n  \r\n  export const deleteTech = id => async dispatch => {\r\n    try {\r\n      setLoading();\r\n  \r\n      await fetch(`/techs/${id}`, {\r\n        method: 'DELETE'\r\n      });\r\n  \r\n      dispatch({\r\n        type: DELETE_TECH,\r\n        payload: id\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: TECHS_ERROR,\r\n        payload: err.response.statusText\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Set loading to true\r\n  export const setLoading = () => {\r\n    return {\r\n      type: SET_LOADING\r\n    };\r\n  };","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getTechs } from '../../actions/techActions';\r\n\r\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    !loading &&\r\n    techs !== null &&\r\n    techs.map(t => (\r\n      <option key={t.id} value={`${t.firstName} ${t.lastName}`}>\r\n        {t.firstName} {t.lastName}\r\n      </option>\r\n    ))\r\n  );\r\n};\r\n\r\nTechSelectOptions.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tech: state.tech\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getTechs }\r\n)(TechSelectOptions);","import React, { useState } from 'react';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addLog } from '../../actions/logActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst AddLogModal = ({ addLog }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    if (message === '' || tech === '') {\r\n      M.toast({ html: 'Please enter a message and tech' });\r\n    } else {\r\n      const newLog = {\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date()\r\n      };\r\n\r\n      addLog(newLog);\r\n\r\n      M.toast({ html: `Log added by ${tech}` });\r\n\r\n      // Clear Fields\r\n      setMessage('');\r\n      setTech('');\r\n      setAttention(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='add-log-modal' className='modal' style={modalStyle}>\r\n      <div className='modal-content'>\r\n        <h4>Enter System Log</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='message'\r\n              value={message}\r\n              onChange={e => setMessage(e.target.value)}\r\n            />\r\n            <label htmlFor='message' className='active'>\r\n              Log Message\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <select\r\n              name='tech'\r\n              value={tech}\r\n              className='browser-default'\r\n              onChange={e => setTech(e.target.value)}\r\n            >\r\n              <option value='' disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type='checkbox'\r\n                  className='filled-in'\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={e => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect blue waves-light btn'\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddLogModal.propTypes = {\r\n  addLog: PropTypes.func.isRequired\r\n};\r\n\r\nconst modalStyle = {\r\n  width: '75%',\r\n  height: '75%'\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addLog }\r\n)(AddLogModal);","import React, { useState, useEffect } from 'react';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { updateLog } from '../../actions/logActions';\r\n\r\nconst EditLogModal = ({ current, updateLog }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (current) {\r\n      setMessage(current.message);\r\n      setAttention(current.attention);\r\n      setTech(current.tech);\r\n    }\r\n  }, [current]);\r\n\r\n  const onSubmit = () => {\r\n    if (message === '' || tech === '') {\r\n      M.toast({ html: 'Please enter a message and tech' });\r\n    } else {\r\n      const updLog = {\r\n        id: current.id,\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date()\r\n      };\r\n\r\n      updateLog(updLog);\r\n      M.toast({ html: `Log updated by ${tech}` });\r\n\r\n      // Clear Fields\r\n      setMessage('');\r\n      setTech('');\r\n      setAttention(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='edit-log-modal' className='modal' style={modalStyle}>\r\n      <div className='modal-content'>\r\n        <h4>Enter System Log</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='message'\r\n              value={message}\r\n              onChange={e => setMessage(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <select\r\n              name='tech'\r\n              value={tech}\r\n              className='browser-default'\r\n              onChange={e => setTech(e.target.value)}\r\n            >\r\n              <option value='' disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type='checkbox'\r\n                  className='filled-in'\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={e => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect blue waves-light btn'\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: '75%',\r\n  height: '75%'\r\n};\r\n\r\nEditLogModal.propTypes = {\r\n  current: PropTypes.object,\r\n  updateLog: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  current: state.log.current\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateLog }\r\n)(EditLogModal);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addTech } from '../../actions/techActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst AddTechModal = ({ addTech }) => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    if (firstName === '' || lastName === '') {\r\n      M.toast({ html: 'Please enter the first and last name' });\r\n    } else {\r\n      addTech({\r\n        firstName,\r\n        lastName\r\n      });\r\n\r\n      M.toast({ html: `${firstName} ${lastName} was added as a tech` });\r\n\r\n      // Clear Fields\r\n      setFirstName('');\r\n      setLastName('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='add-tech-modal' className='modal'>\r\n      <div className='modal-content'>\r\n        <h4>New Technician</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='firstName'\r\n              value={firstName}\r\n              onChange={e => setFirstName(e.target.value)}\r\n            />\r\n            <label htmlFor='firstName' className='active'>\r\n              First Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='lastName'\r\n              value={lastName}\r\n              onChange={e => setLastName(e.target.value)}\r\n            />\r\n            <label htmlFor='lastName' className='active'>\r\n              Last Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect blue waves-light btn'\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddTechModal.propTypes = {\r\n  addTech: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addTech }\r\n)(AddTechModal);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteTech } from '../../actions/techActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst TechItem = ({ tech: { id, firstName, lastName }, deleteTech }) => {\r\n  const onDelete = () => {\r\n    deleteTech(id);\r\n    M.toast({ html: 'Technician deleted' });\r\n  };\r\n\r\n  return (\r\n    <li className='collection-item'>\r\n      <div>\r\n        {firstName} {lastName}\r\n        <a href='#!' className='secondary-content' onClick={onDelete}>\r\n          <i className='material-icons grey-text'>delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nTechItem.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  deleteTech: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteTech }\r\n)(TechItem);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport TechItem from './TechItem';\r\nimport { getTechs } from '../../actions/techActions';\r\n\r\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div id='tech-list-modal' className='modal'>\r\n      <div className='modal-content'>\r\n        <h4>Technician List</h4>\r\n        <ul className='collection'>\r\n          {!loading &&\r\n            techs !== null &&\r\n            techs.map(tech => <TechItem tech={tech} key={tech.id} />)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTechListModal.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tech: state.tech\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getTechs }\r\n)(TechListModal);","import {\r\n    GET_LOGS,\r\n    SET_LOADING,\r\n    LOGS_ERROR,\r\n    ADD_LOG,\r\n    DELETE_LOG,\r\n    UPDATE_LOG,\r\n    SEARCH_LOGS,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT\r\n  } from '../actions/types';\r\n  \r\n  const initialState = {\r\n    logs: null,\r\n    current: null,\r\n    loading: false,\r\n    error: null\r\n  };\r\n  \r\n  export default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case GET_LOGS:\r\n        return {\r\n          ...state,\r\n          logs: action.payload,\r\n          loading: false\r\n        };\r\n      case ADD_LOG:\r\n        return {\r\n          ...state,\r\n          logs: [...state.logs, action.payload],\r\n          loading: false\r\n        };\r\n      case DELETE_LOG:\r\n        return {\r\n          ...state,\r\n          logs: state.logs.filter(log => log.id !== action.payload),\r\n          loading: false\r\n        };\r\n      case UPDATE_LOG:\r\n        return {\r\n          ...state,\r\n          logs: state.logs.map(log =>\r\n            log.id === action.payload.id ? action.payload : log\r\n          )\r\n        };\r\n      case SEARCH_LOGS:\r\n        return {\r\n          ...state,\r\n          logs: action.payload\r\n        };\r\n      case SET_CURRENT:\r\n        return {\r\n          ...state,\r\n          current: action.payload\r\n        };\r\n      case CLEAR_CURRENT:\r\n        return {\r\n          ...state,\r\n          current: null\r\n        };\r\n      case SET_LOADING:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      case LOGS_ERROR:\r\n        console.error(action.payload);\r\n        return {\r\n          ...state,\r\n          error: action.payload\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };","import {\r\n    GET_TECHS,\r\n    ADD_TECH,\r\n    DELETE_TECH,\r\n    SET_LOADING,\r\n    TECHS_ERROR\r\n  } from '../actions/types';\r\n  \r\n  const initialState = {\r\n    techs: null,\r\n    loading: false,\r\n    error: null\r\n  };\r\n  \r\n  export default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case GET_TECHS:\r\n        return {\r\n          ...state,\r\n          techs: action.payload,\r\n          loading: false\r\n        };\r\n      case ADD_TECH:\r\n        return {\r\n          ...state,\r\n          techs: [...state.techs, action.payload],\r\n          loading: false\r\n        };\r\n      case DELETE_TECH:\r\n        return {\r\n          ...state,\r\n          techs: state.techs.filter(tech => tech.id !== action.payload),\r\n          loading: false\r\n        };\r\n      case SET_LOADING:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      case TECHS_ERROR:\r\n        console.error(action.payload);\r\n        return {\r\n          ...state,\r\n          error: action.payload,\r\n          loading: false\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };","import { combineReducers } from 'redux';\r\nimport logReducer from './logReducer';\r\nimport techReducer from './techReducer';\r\n\r\nexport default combineReducers({\r\n    log: logReducer,\r\n    tech: techReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React, { Fragment, useEffect } from 'react';\nimport SearchBar from './components/layout/SearchBar'\nimport Logs from './components/logs/Logs'\nimport AddBtn from './components/layout/AddBtn'\nimport AddLogModal from './components/logs/AddLogModal'\nimport EditLogModal from './components/logs/EditLogModal'\nimport AddTechModal from './components/techs/AddTechModal'\nimport TechListModal from './components/techs/TechListModal'\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\n\nconst App = () => {\n  useEffect(() => {\n    // Init Materialize JS\n    M.AutoInit();\n  });\n\nreturn( \n  <Provider store={store}>\n    <Fragment>\n      <SearchBar/>\n        <div className='container'>\n          <AddBtn />\n          <AddLogModal />\n          <EditLogModal />\n          <AddTechModal />\n          <TechListModal />\n          <Logs />\n        </div>\n    </Fragment>\n    </Provider>\n    )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}